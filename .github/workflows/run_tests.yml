name: Run Tests
on:
  push:
    branches:
      - master
      - production
      - 'release/**'
      - 'hotfix/**'
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  run_tests:
    strategy:
      fail-fast: false
      matrix:
        testPath: ["spec:sliced[0,16]"]
                   # "spec:sliced[1,16]",
                   # "spec:sliced[2,16]",
                   # "spec:sliced[3,16]",
                   # "spec:sliced[4,16]",
                   # "spec:sliced[5,16]",
                   # "spec:sliced[6,16]",
                   # "spec:sliced[7,16]",
                   # "spec:sliced[8,16]",
                   # "spec:sliced[9,16]",
                   # "spec:sliced[10,16]",
                   # "spec:sliced[11,16]",
                   # "spec:sliced[12,16]",
                   # "spec:sliced[13,16]",
                   # "spec:sliced[14,16]",
                   # "spec:sliced[15,16]"]
    runs-on: self-hosted
    services:
      db:
        image: postgres:11
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports: ['6379:6379']
        options: --entrypoint redis-server
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        id: cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: '11'
      - name: Build and run tests
        env:
          DATABASE_URL: postgres://postgres:@localhost:5432/test
          REDIS_URL: redis://localhost:6379/0
          RAILS_ENV: test
        run: |
          sudo apt-get update
          git fetch
          git checkout ${{ secrets.GITHUB_HEAD_REF }}
          git rev-parse --abbrev-ref HEAD
          wget https://chromedriver.storage.googleapis.com/2.35/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          ./chromedriver &
          gem install bundler -v "1.17.3"
          bundle install --deployment --jobs 4 --retry 3
          bundle exec rake db:drop
          bundle exec rake db:create
          bundle exec rake db:schema:load
          bundle exec rake db:test:prepare
          bundle exec rspec
